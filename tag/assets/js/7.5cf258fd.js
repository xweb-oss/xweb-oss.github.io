(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{150:function(t,e,s){t.exports=s.p+"assets/img/cli.ddffd4b0.jpg"},151:function(t,e,s){t.exports=s.p+"assets/img/cli2.fa470dfc.jpg"},152:function(t,e,s){t.exports=s.p+"assets/img/cli3.c8f5f4f1.jpg"},153:function(t,e,s){t.exports=s.p+"assets/img/cli4.d415af74.jpg"},154:function(t,e,s){t.exports=s.p+"assets/img/cli5.b41b0a9e.jpg"},155:function(t,e,s){t.exports=s.p+"assets/img/cli6.494bb6f5.jpg"},156:function(t,e,s){t.exports=s.p+"assets/img/cli7.599a8d7e.jpg"},157:function(t,e,s){t.exports=s.p+"assets/img/cli8.9a41d0da.jpg"},158:function(t,e,s){t.exports=s.p+"assets/img/cli10.17f3e260.jpg"},159:function(t,e,s){t.exports=s.p+"assets/img/cli9.af2b8f4c.jpg"},160:function(t,e,s){t.exports=s.p+"assets/img/cli11.a3452716.jpg"},204:function(t,e,s){"use strict";s.r(e);var a=s(4),n=Object(a.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"脚手架的搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚手架的搭建","aria-hidden":"true"}},[t._v("#")]),t._v(" 脚手架的搭建")]),t._v(" "),a("h3",{attrs:{id:"一、介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、介绍")]),t._v(" "),a("h5",{attrs:{id:"vue-cli-是一个基于-vue-js-进行快速开发的完整系统。有三个组件："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli-是一个基于-vue-js-进行快速开发的完整系统。有三个组件：","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统。有三个组件：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("CLI：@vue/cli 全局安装的 npm 包，提供了终端里的vue命令（如：vue create 、vue serve 、vue ui 等命令）")])]),t._v(" "),a("li",[a("p",[t._v("CLI 服务：@vue/cli-service是一个开发环境依赖。构建于 webpack 和 webpack-dev-server 之上（提供 如：serve、build 和 inspect 命令）")])]),t._v(" "),a("li",[a("p",[t._v("CLI 插件：给Vue 项目提供可选功能的 npm 包 （如： Babel/TypeScript 转译、ESLint 集成、unit和 e2e测试 等）")])])]),t._v(" "),a("h3",{attrs:{id:"二、安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、安装")]),t._v(" "),a("ol",[a("li",[t._v("全局安装过旧版本的 vue-cli(1.x 或 2.x)要先卸载它，否则跳过此步：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("npm uninstall vue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//或者 yarn global remove vue-cli")]),t._v("\n")])])]),a("p",[t._v("操作如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(150),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("p",[t._v("可以看到我之前的版本是2.9.6，卸载成功后，vue命令便不存在了")]),t._v(" "),a("blockquote",[a("p",[t._v("ps：npm WARN警告，可能是coffee-script 的某个依赖包改名了（coffee-script本身已经淘汰了）")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Vue CLI 3需要 nodeJs ≥ 8.9 (官方推荐 8.11.0+，你可以使用 nvm 或 nvm-windows在同一台电脑中管理多个 Node 版本）。"),a("br"),t._v("\n（1）查看node 版本")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(151),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("p",[t._v("（2）下载安装nodeJs很简单（和其他系统软件一样根据需求按步骤安装）这里不做介绍，中文官方下载地址："),a("a",{attrs:{href:"http://nodejs.cn/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("node管官网"),a("OutboundLink")],1)]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("安装@vue/cli（Vue CLI 3的包名称由 vue-cli 改成了 @vue/cli）")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("cnpm install "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g @vue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cli  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//yarn global add @vue/cli")]),t._v("\n")])])]),a("p",[t._v("操作如下图：\n"),a("img",{attrs:{src:s(152),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("p",[t._v("查看版本：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("V")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//vue --version")]),t._v("\n")])])]),a("p",[t._v("结果如下图：\n"),a("img",{attrs:{src:s(153),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("h3",{attrs:{id:"三、使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、使用")]),t._v(" "),a("h5",{attrs:{id:"_1、vue-create-搭建新项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、vue-create-搭建新项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、vue create 搭建新项目")]),t._v(" "),a("p",[t._v("（1）新建项目：\n*官方提示：如果你在 Windows 上通过 minTTY 使用 Git Bash，交互提示符并不工作，必须通过 winpty vue.cmd create hello-world 启动这个命令")]),t._v(" "),a("p",[a("code",[t._v("vue create <Project Name>")]),t._v("//文件名 不支持驼峰（含大写字母）\n具体操作如下：")]),t._v(" "),a("h6",{attrs:{id:"首先，会提示你选择一个preset（预设）："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首先，会提示你选择一个preset（预设）：","aria-hidden":"true"}},[t._v("#")]),t._v(" 首先，会提示你选择一个preset（预设）：")]),t._v(" "),a("p",[t._v("① 除最后两个，其他选项都是你此前保存的预设配置（如下图第一个“ preset-config”是我之前保存的预设配置，如今便可以直接用了）：\n"),a("img",{attrs:{src:s(154),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("p",[t._v("如果没有配置保存过，则只有以下两个选项：")]),t._v(" "),a("p",[t._v("② default（babel，eslint）：默认设置（直接enter）非常适合快速创建一个新项目的原型，没有带任何辅助功能的 npm包")]),t._v(" "),a("p",[t._v("③ Manually select features：手动配置（按方向键 ↓）是我们所需要的面向生产的项目，提供可选功能的 npm 包")]),t._v(" "),a("p",[a("img",{attrs:{src:s(155),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("p",[t._v("手动配置，根据你需要用方向键选择（按 “空格键”选择/取消选择，A键全选/取消全选）对应功能\n"),a("img",{attrs:{src:s(156),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("p",[t._v("简介：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("? Check the features needed for your project: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n>( ) TypeScript                                 // JavaScript的一个超集（添加了可选的静态类型和基于类的面向对象编程：类型批注和编译时类型检查、类、接口、模块、lambda 函数）\n ( ) Progressive Web App (PWA) Support          // 渐进式Web应用程序\n ( ) Router                                     // vue-router（vue路由）\n ( ) Vuex                                       // vuex（vue的状态管理模式）\n ( ) CSS Pre-processors                         // CSS 预处理器（如：less、sass）\n ( ) Linter / Formatter                         // 代码风格检查和格式化（如：ESlint）\n ( ) Unit Testing                               // 单元测试（unit tests）\n ( ) E2E Testing                                // e2e（end to end） 测试\n")])])]),a("p",[t._v("选择完后直接enter，然后会提示你选择对应功能的具体工具包，选择自己擅长或者使用广泛的（方便遇到问题时百度），\n简介如下：")]),t._v(" "),a("p",[t._v("① 首先会让你选择是否使用history router：Vue-Router 利用了浏览器自身的hash 模式和 history 模式的特性来实现前端路由（通过调用浏览器提供的接口）")]),t._v(" "),a("p",[t._v("hash： 浏览器url址栏 中的 # 符号（如这个 URL：http://www.abc.com/#/hello，hash 的值为“ #/hello”），hash 不被包括在 HTTP 请求中（对后端完全没有影响），因此改变 hash 不会重新加载页面")]),t._v(" "),a("p",[t._v("history：利用了 HTML5 History Interface 中新增的 pushState() 和 replaceState() 方法（需要特定浏览器支持）")]),t._v(" "),a("p",[t._v("② css预处理器：主要为css解决浏览器兼容、简化CSS代码 等问题（* Sass诞生于2007年，最早也是最成熟的一款CSS预处理器语言。）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("? Please pick a preset: Manually select features\n? Check the features needed for your project: Router, Vuex, CSS Pre-processors, Linter, Unit\n? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default):\n> SCSS/SASS  //Sass安装需要Ruby环境，是在服务端处理的，SCSS 是 Sass3新语法（完全兼容 CSS3且继承Sass功能）\n  LESS       //Less最终会通过编译处理输出css到浏览器，Less 既可以在客户端上运行，也可在服务端运行 (借助 Node.js)\n  Stylus     //Stylus主要用来给Node项目进行CSS预处理支持，Stylus功能上更为强壮，和js联系更加紧密，可创建健壮的、动态的的CSS。\n③ ESLint：提供一个插件化的javascript代码检测工具\n\n? Pick a linter / formatter config: (Use arrow keys)\n> ESLint with error prevention only\n  ESLint + Airbnb config\n  ESLint + Standard config\n  ESLint + Prettier         //使用较多\n  ④ 何时检测：\n\n? Pick additional lint features: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n>( ) Lint on save                    // 保存就检测\n ( ) Lint and fix on commit          // fix和commit时候检查\n⑤ 单元测试 ：\n\n? Pick a unit testing solution: (Use arrow keys)\n> Mocha + Chai  //mocha灵活,只提供简单的测试结构，如果需要其他功能需要添加其他库/插件完成。必须在全局环境中安装\n  Jest          //安装配置简单，容易上手。内置Istanbul，可以查看到测试覆盖率，相较于Mocha:配置简洁、测试代码简洁、易于和babel集成、内置丰富的expect\n⑥ 如何存放配置 ：\n\n? Where do you prefer placing config for Babel, PostCSS, ESLint, etc.? (Use arrow keys)\n> In dedicated config files // 独立文件放置\n  In package.json // 放package.json里\n ⑦ 是否保存本次配置（之后可以直接使用）：\n\n? Save this as a preset for future projects? (Y/n) // y:记录本次配置，然后需要你起个名; n：不记录本次配置\n")])])]),a("p",[t._v("（2）搭建完成：\n"),a("img",{attrs:{src:s(157),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("h4",{attrs:{id:"项目结构如下："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目结构如下：","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目结构如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(158),alt:"GitHub",title:"GitHub,Social Coding"}}),t._v(" "),a("img",{attrs:{src:s(159),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("h5",{attrs:{id:"对比之前的项目包："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对比之前的项目包：","aria-hidden":"true"}},[t._v("#")]),t._v(" 对比之前的项目包：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(160),alt:"GitHub",title:"GitHub,Social Coding"}})]),t._v(" "),a("h3",{attrs:{id:"四-对比vuecli2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-对比vuecli2","aria-hidden":"true"}},[t._v("#")]),t._v(" 四. 对比vuecli2")]),t._v(" "),a("h6",{attrs:{id:"vuex（状态管理）："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex（状态管理）：","aria-hidden":"true"}},[t._v("#")]),t._v(" vuex（状态管理）：")]),t._v(" "),a("p",[t._v("vue cli 2 中：vuex是搭建完成后自己npm install的，并不包括在搭建过程中。可以看到vue cli 2的vuex文件夹（store）又包含了三个js文件：action（存放一些调用外部API接口的异步执行的的方法，然后commit mutations改变mutations 数据）、index（初始化mutations 数据，是store的出口）、mutations（处理数据逻辑的同步执行的方法的集合，Vuex中store数据改变的唯一方法commit mutations）")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("vue cli 3 中：vuex是包含在搭建过程供选择的预设。vue cli 3 中的只用一个store.js代替了原来的store文件夹中的三个js文件，eg：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vuex "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化状态")]),t._v("\n        count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    mutations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理状态")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("step\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    actions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提交改变后的状态")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'increment'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ol",[a("li",[t._v("router （路由）：")])]),t._v(" "),a("p",[a("code",[t._v("vue cli 2 ：“ router/index.js ”")])]),t._v(" "),a("p",[a("code",[t._v("vue cli 3：“router.js”（用法和做的事都一样）")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("去掉 static  、 新增 public 文件夹")])]),t._v(" "),a("p",[a("code",[t._v("vue cli 2 ：static 是 webpack 默认存放静态资源的文件夹，打包时会直接复制一份到dist文件夹不会经过 webpack 编译")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("vue cli 3  ：摒弃 static 新增了 public 。vue cli 3 中“静态资源”两种处理方式：")]),t._v(" "),a("p",[t._v("经webpack 处理：在 JavaScript 被导入或在 template/CSS 中通过“相对路径”被引用的资源会被编译并压缩")]),t._v(" "),a("p",[t._v("不经webpack 处理：放置在 public 目录下或通过绝对路径被引用的资源将会“直接被拷贝”一份，不做任何编译压缩处理")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("index.html ：")])]),t._v(" "),a("p",[a("code",[t._v("vue cli 2 ：“index.html ”")])]),t._v(" "),a("p",[a("code",[t._v("vue cli 3 ：“public/index.html ”此模板会被 html-webpack-plugin 处理的")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[t._v("src/views：vue cli 3 的 src文件夹 新增 views文件夹 用来存放 “页面”，区分 components（组件）")])]),t._v(" "),a("li",[a("p",[t._v("去掉 build（根据config中的配置来定义规则）、config（配置不同环境的参数）文件夹 ：")])])]),t._v(" "),a("p",[t._v("vue cli 3 中 ，这些配置 你可以通过 命令行参数、或 vue.config.js （在根目录 新建一个 vue.config.js 同名文件）里的 devServer 字段配置开发服务器")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("p",[t._v("babel.config.js：配置Babel 。Vue CLI 使用了 Babel 7 中的新配置格式 babel.config.js。和 .babelrc 或 package.json 中的 babel 字段不同，这个配置文件不会使用基于文件位置的方案，而是会一致地运用到项目根目录以下的所有文件，包括 node_modules 内部的依赖。官方推荐在 Vue CLI 项目中始终使用 babel.config.js 取代其它格式。")])]),t._v(" "),a("li",[a("p",[t._v("根目录的一些其他文件的改变：之前所有的配置文件都在vue create 搭建时preset预设 或者 后期可以通过 命令参数 、 vue.config.js 中配置")])])]),t._v(" "),a("p",[t._v("根据需要在根目录下新建 vue.config.js自行配置，eg：（简单配置，更多配置详情参见官网：https://cli.vuejs.org/zh/config/）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("module.exports = {\n    baseUrl: '/',// 部署应用时的根路径(默认'/'),也可用相对路径(存在使用限制)\n    outputDir: 'dist',// 运行时生成的生产环境构建文件的目录(默认''dist''，构建之前会被清除)\n    assetsDir: '',//放置生成的静态资源(s、css、img、fonts)的(相对于 outputDir 的)目录(默认'')\n    indexPath: 'index.html',//指定生成的 index.html 的输出路径(相对于 outputDir)也可以是一个绝对路径。\n    pages: {//pages 里配置的路径和文件名在你的文档目录必须存在 否则启动服务会报错\n        index: {//除了 entry 之外都是可选的\n            entry: 'src/index/main.js',// page 的入口,每个“page”应该有一个对应的 JavaScript 入口文件\n            template: 'public/index.html',// 模板来源\n            filename: 'index.html',// 在 dist/index.html 的输出\n            title: 'Index Page',// 当使用 title 选项时,在 template 中使用：<title><%= htmlWebpackPlugin.options.title %></title>\n            chunks: ['chunk-vendors', 'chunk-common', 'index'] // 在这个页面中包含的块，默认情况下会包含,提取出来的通用 chunk 和 vendor chunk\n        },\n        subpage: 'src/subpage/main.js'//官方解释：当使用只有入口的字符串格式时,模板会被推导为'public/subpage.html',若找不到就回退到'public/index.html',输出文件名会被推导为'subpage.html'\n    },\n    lintOnSave: true,// 是否在保存的时候检查\n    productionSourceMap: true,// 生产环境是否生成 sourceMap 文件\n    css: {\n        extract: true,// 是否使用css分离插件 ExtractTextPlugin\n        sourceMap: false,// 开启 CSS source maps\n        loaderOptions: {},// css预设器配置项\n        modules: false// 启用 CSS modules for all css / pre-processor files.\n    },\n    devServer: {// 环境配置\n        host: 'localhost',\n        port: 8080,\n        https: false,\n        hotOnly: false,\n        open: true, //配置自动启动浏览器\n        proxy: {// 配置多个代理(配置一个 proxy: 'http://localhost:4000' )\n            '/api': {\n                target: '<url>',\n                ws: true,\n                changeOrigin: true\n            },\n            '/foo': {\n                target: '<other_url>'\n            }\n        }\n    },\n    pluginOptions: {// 第三方插件配置\n        // ...\n    }\n};\n\n")])])]),a("h6",{attrs:{id:"end-npm-run-serve-跑起来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#end-npm-run-serve-跑起来","aria-hidden":"true"}},[t._v("#")]),t._v(" end. npm run serve 跑起来~")])])},[],!1,null,null,null);e.default=n.exports}}]);